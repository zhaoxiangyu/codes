<?xml version="1.0" encoding="UTF-8"?>
<project name="jace-tools" basedir=".." xmlns:ivy="antlib:org.apache.ivy.ant">

	<dirname property="antfile.dir" file="${ant.file.jace-tools}"/>
	<property name="i.basedir" value="${antfile.dir}/.."/>
	
	<import file="${i.basedir}/ant/env-setting.xml" />
	<import file="${i.basedir}/ant/common-tools.xml"/>
	<import file="${i.basedir}/ant/ivy-tools.xml"/>
	
	<property file="${i.basedir}/local.properties"/>
	<property name="tools2.dir" location="${i.basedir}/tools"/>
	
	<!-- jace1.1.1, jace.1.1RC1_04-->
	<property name="jace.basename" value="jace1.1.1"/>
	<property name="jace.dir" value="${tools2.dir}/${jace.basename}"/>
	<property name="peer-example.dir" value="${jace.dir}/release/examples/peer_example1"></property>
	<property name="proxygenerator.script" value="${jace.dir}/release/bin/ProxyGenerator${SCRIPT_EXTNAME}"></property>
	<property name="autoproxy.script" value="${jace.dir}/release/bin/AutoProxy${SCRIPT_EXTNAME}"></property>
	<property name="batchgenerator.script" value="${jace.dir}/release/bin/BatchGenerator${SCRIPT_EXTNAME}"></property>
	
	<target name="install">
		<copy todir="${tools2.dir}">
			<fileset dir="/media/sf_VMshare/java/c" includes="${jace.basename}/**"></fileset>
		</copy>
		<chmod perm="744" dir="${jace.dir}/release/bin" includes="*.sh"></chmod>
	</target>
	
	<target name="install-from-maven">
		<ivy:retrieve organisation="com.googlecode.jace" 
			module="jace-runtime" revision="1.2.14" inline="true" 
			pattern="${tools2.dir}/jace1.2.4/[type]/[artifact]-[revision].[ext]"/>
		<ivy:retrieve organisation="com.googlecode.jace" 
			module="jace-core-java" revision="1.2.14" inline="true" 
			pattern="${tools2.dir}/jace1.2.4/[type]/[artifact]-[revision].[ext]"/>
		<ivy:retrieve organisation="com.googlecode.jace" 
			module="jace-core-cpp" revision="1.2.14" inline="true" 
			pattern="${tools2.dir}/jace1.2.4/[type]/[artifact]-[revision].[ext]"/>
	</target>
	
	<target name="test">
		<if>
			<equals arg1="1" arg2="1"/>
			<then>
				<echo message="confirmed: 1=1"/>
			</then>
			<else>
				<echo message="not confirmed: 1=1"/>
			</else>
		</if>
		<proxy-generator classfile=""/>
	</target>
	
	<target name="run-peer-example">
		<ant antfile="${peer-example.dir}/build.xml" target="clean"
			useNativeBasedir="true">
			<property name="os" value="linux"/>
			<property name="compiler" value="gcc"/>
		</ant>
		<ant antfile="${peer-example.dir}/build.xml" target="test"
			useNativeBasedir="true">
			<property name="os" value="linux"/>
			<property name="compiler" value="gcc"/>
		</ant>
	</target>
	
	<target name="debug">
		<cmd line="-c &quot;cat ${proxygenerator.script}&quot;"/>
		<cmd line="-c &quot;cat ${batchgenerator.script}&quot;"/>
	</target>
	
	<macrodef name="peer-generator">
		<attribute name="classfile"/>
		<attribute name="libname"/>
		<attribute name="headerdir"/>
		<attribute name="sourcedir"/>
		<attribute name="udm" default="true"/>
		<sequential>
			<property name="_udm" value="user_defined_memebers=@{udm}"/>
			<property name="paras" value="peer-generator @{classfile} 
				@{libname} @{headerdir} @{sourcedir} ${_udm}"/>
			<echo message="${paras}"></echo>
		    <java classname="jace.peergen.PeerGenerator">
		      <arg value="@{classfile}"/>
		      <arg value="@{libname}"/>
		      <arg value="@{headerdir}"/>
		      <arg value="@{sourcedir}"/>
		      <arg value="${_udm}"/>
		      <classpath>
		        <fileset dir="${jace.dir}/release/lib">
		          <include name="**/*.jar"/>
		        </fileset>
		      	<fileset file="${jdk-home}/jre/lib/rt.jar"/>
		      </classpath>
		    </java>
		</sequential>
	</macrodef>

	<macrodef name="batch-generator">
		<attribute name="jarfile"/>
		<attribute name="headerdir"/>
		<attribute name="sourcedir"/>
		<attribute name="options" default="-protected"/>
		<sequential>
			<property name="paras" value="batch-generator: @{jarfile} @{headerdir} @{sourcedir}"/>
			<echo message="${paras}"></echo>
			<if>
				<not><available file="@{headerdir}/rt-gen/jace"/></not>
				<then>
				    <java classname="jace.proxygen.BatchGenerator">
				      <arg value="${jdk-home}/jre/lib/rt.jar"/>
				      <arg value="@{headerdir}/rt-gen"/>
				      <arg value="@{headerdir}/rt-gen"/>
				      <classpath>
				        <fileset dir="${jace.dir}/release/lib">
				          <include name="**/*.jar"/>
				        </fileset>
				      	<fileset file="${jdk-home}/jre/lib/rt.jar"/>
				      </classpath>
				    </java>
				</then>
			</if>
		    <java classname="jace.proxygen.BatchGenerator">
		      <arg value="@{jarfile}"/>
		      <arg value="@{headerdir}"/>
		      <arg value="@{sourcedir}"/>
		      <classpath>
		        <fileset dir="${jace.dir}/release/lib">
		          <include name="**/*.jar"/>
		        </fileset>
		      	<fileset file="${jdk-home}/jre/lib/rt.jar"/>
		      </classpath>
		    </java>
		</sequential>
	</macrodef>

	<macrodef name="proxy-generator2">
		<attribute name="classfile"/>
		<attribute name="gen" default="source"/>
		<attribute name="options" default="-protected"/>
		<attribute name="todir"/>
		<sequential>
			<property name="paras" value="proxy-generator2: @{classfile} @{gen} @{options}"/>
			<echo message="${paras}"></echo>
		    <java classname="jace.proxygen.ProxyGenerator" 
		    	output="@{todir}/output.cpp" error="logs/error.log">
		      <arg value="@{classfile}"/>
		      <arg value="@{gen}"/>
		      <arg value="@{options}"/>
		      <classpath>
		        <fileset dir="${jace.dir}/release/lib">
		          <include name="**/*.jar"/>
		        </fileset>
		      	<fileset file="${jdk-home}/jre/lib/rt.jar"/>
		      </classpath>
		    </java>
		    <java classname="jace.proxygen.ProxyGenerator" 
		    	output="@{todir}/output.h" error="logs/error.log">
		      <arg value="@{classfile}"/>
		      <arg value="header"/>
		      <arg value="@{options}"/>
		      <classpath>
		        <fileset dir="${jace.dir}/release/lib">
		          <include name="**/*.jar"/>
		        </fileset>
		      	<fileset file="${jdk-home}/jre/lib/rt.jar"/>
		      </classpath>
		    </java>
		</sequential>
	</macrodef>
	
	<macrodef name="auto-proxy">
		<attribute name="include"/>
		<attribute name="source"/>
		<attribute name="proxies-include"/>
		<attribute name="proxies-source"/>
		<attribute name="rt-jarpath" default="${java.homt}/lib/jar"/>
		<sequential>
			<property name="line" value="${autoproxy.script} @{include} @{source} @{proxies-include} @{proxies-source} @{rt-jarpath} -mindep"/>
			<echo message="${line}"></echo>
			<cmd line="${line}" 
				basedir="${jace.dir}/release/bin"/>
		</sequential>
	</macrodef>

	<macrodef name="proxy-generator">
		<attribute name="classfile"/>
		<attribute name="gen" default="source"/>
		<attribute name="options" default="-protected"/>
		<sequential>
			<property name="line" value="${proxygenerator.script} @{classfile} @{gen} @{options}"/>
			<echo message="${line}"></echo>
			<cmd line="${line}" 
				basedir="${jace.dir}/release/bin"/>
		</sequential>
	</macrodef>
</project>
