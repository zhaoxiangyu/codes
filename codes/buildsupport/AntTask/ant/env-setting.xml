<project name="env-setting" basedir="..">
	<dirname property="antfile.dir" file="${ant.file.env-setting}"/>
	<property name="i.basedir" value="${antfile.dir}/.."/>

	<property file="${antfile.dir}/local-settings.properties"/>
	<condition property="codes-root.dir" value="${i.basedir}/../..">
		<not>
			<available file="${antfile.dir}/local-settings.properties"/>
		</not>
	</condition>
	<import file="${codes-root.dir}/settings.p.xml"/>
	
	<property environment="env"/>
	<condition property="CMD" value="cmd.exe" else="bash">
		<os family="windows" />
	</condition>
	<condition property="MAKE" value="cmake.exe" else="make">
		<os family="windows" />
	</condition>
	<condition property="PATH" value="Path" else="PATH">
		<os family="windows" />
	</condition>
	<!--
	<condition property="PATH_SEP" value=";" else=":">
		<os family="windows" />
	</condition>
	-->
	
	<condition property="script" value="/c build\script\build.bat" else="build/script/build-u.sh">
		<os family="windows" />
	</condition>
	<condition property="SCRIPT_EXTNAME" value="bat" else="sh">
		<os family="windows" />
	</condition>
	<condition property="BASH" value="${cygwin-dir}/bin/bash.exe" else="bash">
		<os family="windows" />
	</condition>
	<condition property="OPT" value="/c" else="-c">
		<os family="windows" />
	</condition>
	<condition property="EXE_EXTNAME" value=".exe" else="">
		<os family="windows" />
	</condition>

	<macrodef name="cmd">
		<attribute name="line"/>
		<attribute name="dir" default="${basedir}"/>
		<element name="cmdvars" optional="yes"/>
		<attribute name="fef" default="true"/>
		<sequential>
			<echo message="${CMD} ${OPT} @{line}"/>
			<exec executable="${CMD}" dir="@{dir}" failifexecutionfails="@{fef}">
				<cmdvars/>
				<arg line="${OPT} '@{line}'"/>
			</exec>
		</sequential>
	</macrodef>
	
    <macrodef name="jad">
        <attribute name="outdir"/>
        <attribute name="classesdir"/>
        <sequential>
			<mkdir dir="@{outdir}"/>
			<cmd line="${JAD} -o -r -sjava -d@{outdir} '@{classesdir}/**/*.class'" fef="false"/>            
        </sequential>
    </macrodef>
	
	<macrodef name="shell-script2">
		<attribute name="file" default=""/>
		<attribute name="outputproperty" default="@{file}.outputproperty"/>
		<attribute name="dir" default="${basedir}"/>
		<text name="script" optional="true"/>
		<sequential>
			<if><isset property="script"/>
				<then>
					<echo message="${CMD} @{script}"/>
					<exec executable="${CMD}" dir="@{dir}" outputproperty="@{outputproperty}">
						<arg line="${OPT} '@{script}'"/>
					</exec>
				</then>
				<else>
					<echo message="${CMD} @{file}.${SCRIPT_EXTNAME}"/>
					<exec executable="${CMD}" dir="@{dir}" outputproperty="@{outputproperty}">
						<arg line="@{file}.${SCRIPT_EXTNAME}"/>
					</exec>
				</else>
			</if>
		</sequential>
	</macrodef>

	<macrodef name="cmd2">
		<attribute name="executable"/>
		<attribute name="line"/>
		<attribute name="additionalPath" default=""/>
		<attribute name="dir" default="${basedir}"/>
		<attribute name="fef" default="true"/>
		<sequential>
			<exec executable="@{executable}" dir="@{dir}" failifexecutionfails="@{fef}">
				<env key="${PATH}" path="@{additionalPath}${path.separator}${env.${path}}"/>
				<arg line="@{line}"/>
			</exec>
		</sequential>
	</macrodef>
	
	<macrodef name="make">
		<attribute name="dir" default="${basedir}"/>
		<attribute name="makefile"/>
		<attribute name="target"/>
		<element name="vars" optional="yes"/>
		<sequential>
			<echo>${MAKE} -f @{makefile} @{target}</echo>
			<cmd dir="@{dir}" line="${MAKE} -f @{makefile} @{target}">
				<cmdvars>
					<vars/>
				</cmdvars>
			</cmd>
		</sequential>
	</macrodef>

	<macrodef name="console">
		<attribute name="wd" default="${basedir}"/>
		<sequential>
			<cmd2 executable="gnome-terminal" line="--working-directory @{wd}"/>
		</sequential>
	</macrodef>
	
	<macrodef name="explorer">
		<attribute name="dir" default="${basedir}"/>
		<sequential>
			<cmd2 executable="nautilus" line="@{dir}"/>
		</sequential>
	</macrodef>

	<macrodef name="append-newline">
		<attribute name="file"/>
		<attribute name="text"/>
		<sequential>
			<!-- &quot; is &#34; , ascii code of '"' is 34 in decimal -->
			<cmd line="echo -e &quot;@{text}&#34; >>@{file}"/>

			<!--
			<echo file="@{file}" append="true" message="@{text}"/>
			-->
		</sequential>
	</macrodef>
	
	<macrodef name="bell">
		<sequential>
			<!-- 'man ascii' to check ascii code for special character -->
			<!-- \x07 stand for 'bell' character, whose ascii code is 07 in hex -->
			<cmd line="echo -e &quot;\x07&quot;"/>
		</sequential>
	</macrodef>

	<macrodef name="append-path">
		<attribute name="location"/>
		<sequential>
			<append-newline text="export PATH=@{location}${path.separator}\x24PATH" 
				file="~/.bashrc"/>
		</sequential>
	</macrodef>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${ant-contrib.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
	  </classpath>
	</taskdef>
	
	<target name="set-paths">
		<append-path location="${ant-bin.dir}${file.separator}bin"/>
	</target>
	
	<target name="test-env">
		<bell/>
		<append-newline text="export PATH=../${path.separator}\x24PATH" 
			file="a.txt"/>
		<cmd line="cat a.txt;rm a.txt"/>
		
		<property name="haha"><![CDATA[ HAHA you]]></property>
		<echo>${haha}</echo>
		<echo><![CDATA[${haha} again! ]]></echo>
		<concat destfile="b.txt" append="true"><![CDATA[ $${haha} not again! ]]>
		</concat>
		<concat><filelist dir="${basedir}" files="b.txt"/></concat>
		<delete file="b.txt"></delete>
		<shell-script outputproperty="op">
			echo message from shell-script
			echo message from second command
		</shell-script>
		<echo>${op}</echo>
	</target>
	
	<target name="install-jdk7">
		<available file="${user.home}/sw/jdk7/jdk1.7.0/bin/java" 
			property="jdk7.java.exists" value="yes"></available>
		<available file=".bashrc.jdk7.updated" 
			property="jdk7.configed" value="yes"></available>

		<antcall target="jdk7-install"></antcall>
		<antcall target="jdk7-config"></antcall>
	</target>
	
	<target name="jdk7-install" unless="jdk7.java.exists">
		<mkdir dir="${download.dir}"/>
		<get src="http://download.oracle.com/otn-pub/java/jdk/7/jdk-7-linux-i586.tar.gz" 
			dest="${download.dir}/jdk-7-linux-i586.tar.gz" 
			verbose="true" usetimestamp="true"/>
		<gunzip src="${download.dir}/jdk-7-linux-i586.tar.gz"/>
		<untar src="${download.dir}/jdk-7-linux-i586.tar" 
			dest="${download.dir}/jdk-7-linux-i586"/>
		<mkdir dir="${user.home}/sw/jdk-7-linux-i586"/>
		<move todir="${user.home}/sw/jdk7">
			<fileset dir="${download.dir}/jdk-7-linux-i586"></fileset>
		</move>
		<cmd line="ls ${user.home}/sw/jdk7"/>
	</target>

	<target name="jdk7-config" unless="jdk7.configed">
		<concat destfile="${user.home}/.bashrc" append="true"><![CDATA[
export JAVA_HOME=${user.home}/sw/jdk7/jdk1.7.0
export JRE_HOME=$${JAVA_HOME}/jre
export CLASSPATH=$${JAVA_HOME}/lib:$${JRE_HOME}/lib  
export PATH=$${JAVA_HOME}/bin:$$PATH ]]></concat>
		<touch file=".bashrc.jdk7.updated"></touch>
		<echo><![CDATA[sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-7-sun/bin/java 300 ]]></echo>
		<echo><![CDATA[sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/java-7-sun/bin/javac 300 ]]></echo>
		<echo><![CDATA[sudo update-alternatives --config java]]></echo>
		<cmd line="java -version"/>
	</target>
</project>
